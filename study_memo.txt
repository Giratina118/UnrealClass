파일 옮길때 config, content, source, .sin, .uproject 5가지만 옮기면 됨

액터: 월드에 배치하는 오브젝트
블루프린트 클래스: 액터의 코드, 이벤트 그래프가 메인,
	따로 함수를 만들어 이 곳에서 사용 가능
	컴포넌트에서 오브젝트를 만들어줘야 함
	컴파일, 저장 해줘야 함
이벤트 그래프: begin play(start), 틱(update), play 종료, destroy,
	커스텀 이벤트도 가능
월드 세팅 -> 게임모드 오버라이드 -> GameModeBase
	-> 게임 씬 자유롭게 이동하면서 보기 가능

게임 시작 맵(씬) 변경
보기 -> 프로젝트 세팅 -> 맵&모드 -> 에디터 시작 맵 변경
단축키 C 주석달기

기본 함수 (화살표를 빈 공간으로 끌어놓거나 마우스 오른쪽 버튼으로 생성 가능)
Print String
Append 두 개의 문자열 연결
+-*/ 등, <=> 등

Set Actor Location (transform.position)
Get Actor Location
Set Actor Rotation (transform.rotate), 두 축 동시 회전 시 오류
Get Actor Rotation
Add Actor World Offset (transform.Translate)
Add Actor World Rotation (transfotm.Rotation)

Get World Delta Seconds 델타 시간

int, float
Equal: 정확히 같으면 true, 아니면 false를 반환
Nearly Equal(float): 실수가 허용치 안에 있으면 true,
	아니면 false를 반환
Clamp: 값이 Min/Max 이내의 값을 갖도록 제한
InRange: 값이 Min/Max 이내에 있으면 true, 아니면 false를 반환
Normalize to Range: 주어진 범위로 정규화 된 값을 반환. 
	예를 들어, 0(Min)-100(Max)을 범위로 하고, 
	50을 입력하면 0.5 가 반환됩니다

vector
Normalize : 벡터의 단위벡터를 반환
VectorLength : 벡터의 길이를 반환
Dot Product : 두 벡터의 내적을 반환
Cross Product : 두 벡터의 외적을 반환

Get Actor Forward Vector: 월드 자표계에서 해당 액터의 X축이 		향하는 단위 벡터를 반환
Get Actor Right Vector: 월드 자표계에서 해당 액터의 Y축이 
	향하는 단위 벡터를 반환
Get Actor Up Vector: 월드 자표계에서 해당 액터의 Z축이
	향하는 단위 벡터를 반환
Distance: 두 벡터의 길이를 반환
RotateVector: 벡터를 로테이터로 회전시킨 벡터를 반환


Find look at location: 2개의 입력을 받아서 기준 액터가 타켓 액터를 바라보는 방향
Rotation From X Vector: 벡터를 입력받아 벡터가 가리키는	
	방향을 Rotation으로 반환(x축은 0으로)

select: 참/거짓에 따라 A 또는 B 값을 반환 합니다.
	C++의 삼항 연산자와 유사합니다.
Lerp: 보간, 0~1사이의 x축(또는 시간 축) 값을 입력 받아,
	y1 과 y2의 보간 값을 반환합니다.
interpToConstant: 현재 값/목적 값/보간 속력 값을 받아서
	현재 값이 목적 값이 되도록 프레임마다 ‘보간’ 해주는
	함수입니다. 보간하는 기울기는 속력 값이 됩니다.
interpTo: InterpToConstant가 일정한 속력으로 보간 해 준다면, 		이 함수는 시작점이나 끝지점에서 부드러운 곡선으로
	트래킹을 합니다.

폰(Pawn)
플레이어 컨트롤러에 의해 빙의될 수 있고 쉽게 입력받을 수 있음
	키보드 이벤트 Z, X, W, S, A, D 등
	밖에서 플레이어 자동 빙의 player0으로 설정해야 함


블루프린트 -> 플레이어 컨트롤러 -> 디폴트 폰 클래스를 내가 만든거로

프로젝트 세팅 -> 입력 -> 바인딩 -> 입력 키 세팅
세팅한 것을 함수처럼 블루프린트에서 사용 가능


컴포넌트: 액터에 부착(Attach)하여 사용가능한 하나의 객체이자 속성/기능 묶음 (=블루프린터에 큐브나 스피어 만든거)

시퀀스: 블루프린터에서 순서대로 실행, 깔끔해짐

컴포넌트 함수
local 좌표계
	Set Relative Location
	Add Relative Location
	Set Relative Rotation
	Add Relative Rotation
	Set Relative 3D scale

global 좌표계
	Set World Location
	Add World Offset
	Set World Rotation
	Add World Rotation
	Set World 3D scale

스태틱 메시 컴포넌트
소켓: 컴포넌트에 위치 지정(스태텍 메시, 메시에서 선언), 가벼움

카메라 컴포넌트
	포스트 프로세스(후처리, 포토샵같은 보정)
	종횡비 제한 누른 후에 카메라 종횡비 조정 가능
	투영모드, 시야각 등 설정

스프링암 컴포넌트
	카메라 부모로 설정해놓기
	카메라 지연(부드럽게)
	카메라의 상대적 위치 설정 가능

타임라인 컴포넌트
	카세트 플레이어 or 동영상 재생장치 같은 느낌
	+트랙 -> float트랙: 커스텀 ㅡ래프 생성해서 값 쓸 수 있음
	play from start에 넣어야 이벤트 작동 시 실행

플로팅 폰 이동
	폰의 간단한 움직임 조작
	플로팅 폰 이동 -> add input vector 해서 이동 가능

append: string 문자 합치기

branch (= if문)

콜리전: 충돌, (무시, 겹칩: 트리거, 막힘: 콜리전 3가지)
겹침
	actorBeginOverlap
	actorEndOverlap

트레이스: 레이캐스트(광선)
	Line Trace By Channel

Destroy Actor: 삭제

----------------------------------------------------------------

UMG(UI, 대부분 위젯)
Z-Order 위젯 간의 우선순위, 무엇이 더 위에 보일지

위젯 블루프린트의 팔레트에서 캔버스 패널 넣고 시작

버튼 이벤트
	호버 시(마우스 올려놨을 때)
	비호버 시(마우스 내려놨을 때)

게임 모드 베이스 블루프린트, 플레이어 컨트롤러 블루프린트 생성
게임 모드 베이스 블루트린트에서 플레이어 컨트롤러에 만든 걸로 설정
플레이어 컨트롤러 블루프린트에서 마우스 커서 표시 선택

텍스트 박스 -> 게임 내에서 글씨 쓰기 가능한 칸
텍스트 -> 고정된 텍스트
슬라이더 -> 인게임에서 변경 가능


위젯 생성 -> add to viewport 연결
Remove from Parent를 플레이 종료 이벤트에 연결하면 액터 사라졌을 때 위젯도 사라짐


Is Visible 위젯이 화면상에 보여지는지 확인
Set is Enabled 위젯 enable 설정
Set Visivle 위젯 Visible 설정

Panel 계열 함수
	Add Childe: 패널 하위에 위젯 추가
	Add Child to …: 패널 유형별로 하위에 위젯 추가
	Clear Children: 하위 위젯들 모두 삭제
	Remove child: 레퍼런스를 입력받아 해당 하위 위젯을 삭제
	Get Child At: 래퍼런스를 입력받아 하위 위젯의 인덱스를 반환
	Get All Children: 모든 하위 위젯을 배열 형태로 반환

유저위젯이벤트
Construct: 위젯이 생성될 때 호출되는 이벤트
Pre Construct: 게임플레이에서 호출되는 Construct와 비슷하나, 
	에디터상에서도 호출. 따라서 즉각적인 디자인을 확인할 수 있음
Destruct: 위젯이 소멸될 때 호출되는 이벤트
On Mouse …: 마우스에 관련된 이벤트 시리즈
On Drag …: 드래그에 관련된 이벤트 시리즈
On Animation Started/Finished: 어떠한 애니메이션이라도 실행될 때 호출

Get Player Controller: 플레이어 컨트롤러를 반환
Get Player Pawn: 인덱스에 해당하는 플레이어 폰을 반환
Get Owing Player Pawn: 이 UI의 소유 플레이어 폰을 반환
Get Player Character: 인덱스에 해당하는 플레이어 캐릭터를 반환

Set Brush from Texture: 이미지 바꾸기

프로그래스 바, 슬라이더(게임 내에서 조절 가능)
바인딩: 프로그래스바 같은거의 수치를 변수와 연결해서 조절

버튼에 텍스트를 뒀을때 비헤이비어 visibility를 not hit로

보더: 하나의 자식만 가질 수 있음, 배경이미지 지정
오버레이: 여러 자식을 가질 수 있지만 단순한 정렬만 가능
스케일박스: 부모 위젯의 크기가 변하거나 해당 위젯의 크기가 변할경우, 
	스케일을 변경시켜주는 위젯
크기 박스:  스크린상에서 원하는 크기를 지정할 수 있는 위젯
	이를 통해 비율을 정할 수도 있다.
스크롤박스: 범위를 넘어서면 스크롤바가 생김
위젯 스위처: 안에 위젯들을 넣어놓으면 활성 위젯 인덱스 번호를 바꿔서 표시되는 위젯을 설정할 수 있음, 하나만 보임
가로박스, 세로박스: 정해진 방향으로만 정렬
균등 그리드 패널: 인벤토리같은 가로세로 일정한 행렬 방식의 이미지 배치


네임 변수 -> 인스턴스 편집 가능, 스폰시 노출

for each loop: for문

액터 컴포넌트: 데이터를 많이 처리, ex) ~manager
폰에 아이템 매니저 추가


위젯 애니메이션: 애니메이션 창 열고 애니메이션 추가, 위젯 선택
	-> 트랙 추가 -> 시간 조절 후 해댕 위젯의 오프셋(위치 변경)

----------------------------------------------------------------

자료형

String: 일반적인 문자열
	Append : 복수의 문자열을 입력받아 붙여줌
	Equal : 문자열을 비교하여 같으면 True를 반환
	Contains : 입력 받은 문자열이 존재하는지 반환
	len: 문자열의 길이를 반환
	대소문자 변환, 역순, 부분 문자열 추출 등 가능

Name: 한 번만 저장, 변경 및 조작 불가능, 대소문자 구분 안 함, 초경량, 		찾거나 키로 접근하는 속도, 검색이 빠름

Text: String보다 더욱 유틸리티 성질이 높은 컴포넌트 자료형
	포맷 텍스트


열거형
구조체

For Loop: for문
For Loop with Break: 실행 핀을 통해 루프 중단 가능
For Each: foreach 문
For Each with Break: 실행 핀을 통해 루프 중단 가능
While Loop: while 문

TArray: 배열
	Add: 배열 맨 뒤에 요소를 추가
	Remove Index: 인덱스로 배열을 제거
	AddUnique: 배열에 같은 요소가 없으면 추가
	Remove Item: 값이 같은 요소를 모두 제거
	Insert: 인덱스로 중간에 삽입
	clear: 배열의 모든 요소를 지움
	Contain Item: 같은 값을 갖는 요소가 있는지 체크
	Length: 배열의 길이를 반환
	Find Item: 같은 요소가 있으면 인덱스를 반환. 없으면 -1 반환
	Set Array: 해당 인덱스의 요소 값을 설정(설정된 번호가 현재 배열 번호보다 큰 경우 자동으로 기본값으로 채움).
	Resize: 입력만큼 크기를 설정하고, 늘어난 요소는 디폴트값으로 채움
	Random Array Item: 랜덤으로 배열의 요소를 반환
	Shuffl : 배열을 무작위로 섞습니다.

TMap: 중복된 키를 방지, 키/값을 쌍으로 갖기에 무언가 맵핑하고, 
	검색하는데 좋은 자료구조
변수 타입으로 키(키보드 입력)를 할 수도 있음


타이머 핸들
	Set Timer by Event, Set Timer by Function Name
	타이머를 실행시키고, 해당 타이머핸들을 반환하는 함수
	Pause Timer by Handle: 타이머를 일시정지
	Unpause Timer by Handle: 일시정지된 타이머를 멈춰진 시간부터 다시 재생
	Invalidate: 타이머를 무효화
	Clear and Invalidate by Timer Handle: 타이머를 무효화 하고 삭제


시간관련변수
	DateTime : 현재 날짜를 표현하는 구조체
	TimeCode, TimeSpan: 시간을 표현하는 구조체, 시, 분, 초 등을 멤버로 가짐
	Today: 이 컴퓨터에서 로컬 날짜를 반환
	Now: 이 컴퓨터에서 로컬 날짜 및 시간을 반환


랜덤함수
	Random Bool with Weight: 0~1까지의 가중치를 입력받아 		True/False를 반환
	예를 들어 가중치가 0.4 면, True 40%, False 60%의 확률로 반환
	Random Integer in Range: 최소값과 최대값을 입력 받아 범위 내의 정수를 반환
	Random Stream과 시드를 활용하면 조금 더 무작위적인 패턴을 만들 수 있음
	일반적으로 시드는 실제시간(Real Time) 등을 받아서 적용
	Random Float in Range from Stream : 
	Seed Random Stream : 스트림에 새 랜덤 시드를 적용
	Set Random Stream Seed : 스트림에 새로운 시드를 적용


커브: 애니메이션 트랙, 타임라인 트랙같은 곳에 사용 가능


데이터 테이블: 언리얼에서 DB 역할을 하는 특별한 형태의 자료형
비가소성 데이터이며, 한 번 저장되면 게임 실행시간에 값을 변경할 수 없다.

UClass: 언리얼에서는 리플렉션의 한 가지 기능으로 클래스타입을 변수로 생성할 수 있다

TSubClassOf

다른 언리얼 프로젝트로 폴더들의 이주(프로젝트간 콘텐츠, 에셋들을 옮김)가 가능


CPP
새 CPP클래스 -> 블루프린트 함수 라이브러리
헤더파일의 클래스 안에
public:
UFUNCTION(BlueprintCallable, category = "MyCPPLibrary") 작성
그 밑에 static 뒤에 만들 함수명 작성
cpp파일에서 자료형 UmyCPPBlueprintFunctionLibrary::함수명 생성 후 함수 내용 작성
작성한 후 언리얼엔진 오른쪽 밑의 버튼으로 컴파일


매크로
실행핀을 유연하게 배치할 수 있음

UObject
모든 클래스의 기반 클래스


블루프린트 오른쪽 클릭 후 자식 클래스 생성 가능
변수 프라이빗 설정하면 자식에게 안 보임
자식에서 함수 생성 옆의 오버라이드 클릭 후 부모의 함수 선택하면 오버라이드 가능
오버라이드한 함수에 오른쪽 클릭 후 부모함수에 대한 추가 가능

레벨클래스
레벨 마다의 코드를 작성할 수 있는 공간
아웃라이너에서 바로 오브젝트 끌어서 이벤트 설정 가능

블루프린트 인터페이스
변수X, 함수만 추가 가능
정의를 비워놓아도 된다

인터페이스 지정 시
클래스 세팅 -> 구현된 인터페이스 추가



